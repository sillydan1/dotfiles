CompileFlags:
  Add: -Wno-unknown-warning-option
  # Remove: [-m*, -f*]

Diagnostics:
  ClangTidy:
    FastCheckFilter: None
    Add:
      # - android-*
      # - boost-*
      - bugprone-argument-comment
      - bugprone-assert-side-effect
      - bugprone-assignment-in-if-condition
      - bugprone-bad-signal-to-kill-thread
      - bugprone-bool-pointer-implicit-conversion
      - bugprone-branch-clone
      - bugprone-copy-constructor-init
      - bugprone-dangling-handle
      - bugprone-dynamic-static-initializers
      # - bugprone-easily-swappable-parameters
      # - bugprone-exception-escape
      - bugprone-fold-init-type
      - bugprone-forward-declaration-namespace
      - bugprone-forwarding-reference-overload
      - bugprone-implicit-widening-of-multiplication-result
      - bugprone-inaccurate-erase
      - bugprone-incorrect-roundings
      - bugprone-infinite-loop
      - bugprone-integer-division
      - bugprone-lambda-function-name
      - bugprone-macro-parentheses
      - bugprone-macro-repeated-side-effects
      - bugprone-misplaced-operator-in-strlen-in-alloc
      - bugprone-misplaced-pointer-arithmetic-in-alloc
      - bugprone-misplaced-widening-cast
      - bugprone-move-forwarding-reference
      - bugprone-multiple-new-in-one-expression
      - bugprone-multiple-statement-macro
      - bugprone-no-escape
      - bugprone-non-zero-enum-to-bool-conversion
      - bugprone-not-null-terminated-result
      - bugprone-parent-virtual-call
      - bugprone-posix-return
      - bugprone-redundant-branch-condition
      - bugprone-reserved-identifier
      - bugprone-shared-ptr-array-mismatch
      - bugprone-signal-handler
      - bugprone-signed-char-misuse
      - bugprone-sizeof-container
      - bugprone-sizeof-expression
      - bugprone-spuriously-wake-up-functions
      - bugprone-standalone-empty
      - bugprone-string-constructor
      - bugprone-string-integer-assignment
      - bugprone-string-literal-with-embedded-nul
      - bugprone-stringview-nullptr
      - bugprone-suspicious-enum-usage
      - bugprone-suspicious-include
      - bugprone-suspicious-memory-comparison
      - bugprone-suspicious-memset-usage
      - bugprone-suspicious-missing-comma
      - bugprone-suspicious-realloc-usage
      - bugprone-suspicious-semicolon
      - bugprone-suspicious-string-compare
      - bugprone-swapped-arguments
      - bugprone-terminating-continue
      - bugprone-throw-keyword-missing
      - bugprone-too-small-loop-variable
      - bugprone-unchecked-optional-access
      - bugprone-undefined-memory-manipulation
      - bugprone-undelegated-constructor
      - bugprone-unhandled-exception-at-new
      - bugprone-unhandled-self-assignment
      - bugprone-unique-ptr-array-mismatch
      - bugprone-unsafe-functions
      - bugprone-unused-raii
      - bugprone-unused-return-value
      - bugprone-use-after-move
      - bugprone-virtual-near-miss
      - cert-dcl03-c
      # - cert-dcl21-cpp
      # - cert-dcl50-cpp
      - cert-dcl54-cpp
      - cert-dcl58-cpp
      - cert-dcl59-cpp
      - cert-env33-c
      - cert-err09-cpp
      - cert-err34-c
      - cert-err52-cpp
      # - cert-err58-cpp
      - cert-err60-cpp
      - cert-err61-cpp
      - cert-fio38-c
      - cert-flp30-c
      - cert-msc30-c
      - cert-msc50-cpp
      - cert-oop11-cpp
      - clang-analyzer-*
      - clang-diagnostic-*
      # - concurrency-* # TODO: Would like to add this
      - cppcoreguidelines-avoid-capturing-lambda-coroutines
      - cppcoreguidelines-avoid-const-or-ref-data-members
      - cppcoreguidelines-avoid-do-while
      - cppcoreguidelines-avoid-goto
      # - cppcoreguidelines-avoid-non-const-global-variables # TODO: Would like to add this
      - cppcoreguidelines-avoid-reference-coroutine-parameters
      # - cppcoreguidelines-init-variables # TODO: Would like to add this
      - cppcoreguidelines-interfaces-global-init
      # - cppcoreguidelines-macro-usage # TODO: Would like to add this
      - cppcoreguidelines-misleading-capture-default-by-value
      - cppcoreguidelines-missing-std-forward
      # - cppcoreguidelines-narrowing-conversions
      - cppcoreguidelines-no-malloc
      # - cppcoreguidelines-owning-memory
      # - cppcoreguidelines-prefer-member-initializer
      # - cppcoreguidelines-pro-bounds-array-to-pointer-decay
      # - cppcoreguidelines-pro-bounds-constant-array-index
      # - cppcoreguidelines-pro-bounds-pointer-arithmetic
      - cppcoreguidelines-pro-type-const-cast
      - cppcoreguidelines-pro-type-cstyle-cast
      - cppcoreguidelines-pro-type-member-init
      # - cppcoreguidelines-pro-type-reinterpret-cast
      - cppcoreguidelines-pro-type-static-cast-downcast
      # - cppcoreguidelines-pro-type-union-access
      # - cppcoreguidelines-pro-type-vararg
      - cppcoreguidelines-rvalue-reference-param-not-moved
      - cppcoreguidelines-slicing
      - cppcoreguidelines-special-member-functions
      - cppcoreguidelines-virtual-class-destructor
      # - fuchsia-*
      - google-build-explicit-make-pair
      - google-build-namespaces
      - google-build-using-namespace
      - google-default-arguments
      - google-explicit-constructor
      - google-global-names-in-headers
      - google-objc-avoid-nsobject-new
      - google-objc-avoid-throwing-exception
      - google-objc-function-naming
      - google-objc-global-variable-declaration
      # - google-readability-avoid-underscore-in-googletest-name
      - google-readability-braces-around-statements
      - google-readability-casting
      - google-readability-function-size
      # - google-readability-namespace-comments
      # - google-readability-redundant-smartptr-get
      - google-runtime-int
      # - google-runtime-member-string-references
      - google-runtime-operator
      # - google-runtime-references
      - hicpp-braces-around-statements
      - hicpp-deprecated-headers
      - hicpp-exception-baseclass
      - hicpp-explicit-conversions
      - hicpp-function-size
      - hicpp-invalid-access-moved
      - hicpp-member-init
      - hicpp-move-const-arg
      # - hicpp-named-parameter
      - hicpp-new-delete-operators
      # - hicpp-no-array-decay
      # - hicpp-no-assembler
      - hicpp-no-malloc
      - hicpp-noexcept-move
      # - hicpp-signed-bitwise
      - hicpp-special-member-functions
      - hicpp-static-assert
      - hicpp-undelegated-constructor
      - hicpp-use-auto
      - hicpp-use-emplace
      - hicpp-use-equals-default
      - hicpp-use-equals-delete
      - hicpp-use-noexcept
      - hicpp-use-nullptr
      - hicpp-use-override
      # - hicpp-vararg
      # - llvm-header-guard
      # - llvm-include-order
      # - llvm-namespace-comment
      - llvm-twine-local
      - misc-confusable-identifiers
      - misc-const-correctness
      - misc-definitions-in-headers
      - misc-include-cleaner
      - misc-misleading-bidirectional
      - misc-misleading-identifier
      - misc-misplaced-const
      - misc-new-delete-overloads
      # - misc-no-recursion
      - misc-non-copyable-objects
      # - misc-non-private-member-variables-in-classes
      - misc-redundant-expression
      - misc-static-assert
      - misc-throw-by-value-catch-by-reference
      - misc-unconventional-assign-operator
      - misc-uniqueptr-reset-release
      - misc-unused-alias-decls
      # - misc-unused-parameters
      - misc-unused-using-decls
      - misc-use-anonymous-namespace
      - modernize-avoid-bind
      # - modernize-avoid-c-arrays
      - modernize-concat-nested-namespaces
      - modernize-deprecated-headers
      - modernize-deprecated-ios-base-aliases
      - modernize-loop-convert
      - modernize-macro-to-enum
      - modernize-make-shared
      - modernize-make-unique
      - modernize-pass-by-value
      - modernize-raw-string-literal
      - modernize-redundant-void-arg
      - modernize-replace-auto-ptr
      - modernize-replace-disallow-copy-and-assign-macro
      - modernize-replace-random-shuffle
      - modernize-return-braced-init-list
      - modernize-shrink-to-fit
      - modernize-type-traits
      - modernize-unary-static-assert
      - modernize-use-auto
      - modernize-use-bool-literals
      # - modernize-use-default-member-init
      - modernize-use-emplace
      - modernize-use-equals-default
      - modernize-use-equals-delete
      # - modernize-use-nodiscard
      - modernize-use-noexcept
      - modernize-use-nullptr
      - modernize-use-override
      # - modernize-use-trailing-return-type # TODO: Would like to add this
      - modernize-use-transparent-functors
      - modernize-use-uncaught-exceptions
      - modernize-use-using
      - mpi-*
      - objc-*
      - performance-faster-string-find
      - performance-for-range-copy
      - performance-implicit-conversion-in-loop
      - performance-inefficient-algorithm
      - performance-inefficient-string-concatenation
      - performance-inefficient-vector-operation
      - performance-move-const-arg
      - performance-move-constructor-init
      - performance-no-automatic-move
      - performance-no-int-to-ptr
      - performance-noexcept-move-constructor
      - performance-trivially-destructible
      - performance-type-promotion-in-math-fn
      - performance-unnecessary-copy-initialization
      - performance-unnecessary-value-param
      - portability-*
      - readability-avoid-const-params-in-decls
      - readability-avoid-unconditional-preprocessor-if
      - readability-braces-around-statements
      - readability-const-return-type
      - readability-container-contains
      # - readability-container-data-pointer # TODO: Would like to add this
      - readability-container-size-empty
      # - readability-convert-member-functions-to-static
      - readability-delete-null-pointer
      - readability-duplicate-include
      - readability-else-after-return
      # - readability-function-cognitive-complexity # TODO: Would like to add this
      - readability-function-size
      # - readability-identifier-length
      - readability-identifier-naming
      - readability-implicit-bool-conversion
      - readability-inconsistent-declaration-parameter-name
      - readability-isolate-declaration
      # - readability-magic-numbers # TODO: Would like to add this
      # - readability-make-member-function-const # TODO: Would like to add this
      - readability-misleading-indentation
      - readability-misplaced-array-index
      # - readability-named-parameter
      - readability-non-const-parameter
      - readability-operators-representation
      # - readability-qualified-auto # TODO: Would like to add this
      - readability-redundant-access-specifiers
      - readability-redundant-control-flow
      - readability-redundant-declaration
      - readability-redundant-function-ptr-dereference
      # - readability-redundant-member-init
      - readability-redundant-preprocessor
      - readability-redundant-smartptr-get
      - readability-redundant-string-cstr
      - readability-redundant-string-init
      - readability-simplify-boolean-expr
      - readability-simplify-subscript-expr
      - readability-static-accessed-through-instance
      - readability-static-definition-in-anonymous-namespace
      - readability-string-compare
      - readability-suspicious-call-argument
      - readability-uniqueptr-delete-release
      # - readability-uppercase-literal-suffix
      - readability-use-anyofallof
    CheckOptions:
      cert-dcl16-c.NewSuffixes: 'L;LL;LU;LLU'
      cert-err33-c.AllowCastToVoid: 'true'
      cert-err33-c.CheckedFunctions: '::aligned_alloc;::asctime_s;::at_quick_exit;::atexit;::bsearch;::bsearch_s;::btowc;::c16rtomb;::c32rtomb;::calloc;::clock;::cnd_broadcast;::cnd_init;::cnd_signal;::cnd_timedwait;::cnd_wait;::ctime_s;::fclose;::fflush;::fgetc;::fgetpos;::fgets;::fgetwc;::fopen;::fopen_s;::fprintf;::fprintf_s;::fputc;::fputs;::fputwc;::fputws;::fread;::freopen;::freopen_s;::fscanf;::fscanf_s;::fseek;::fsetpos;::ftell;::fwprintf;::fwprintf_s;::fwrite;::fwscanf;::fwscanf_s;::getc;::getchar;::getenv;::getenv_s;::gets_s;::getwc;::getwchar;::gmtime;::gmtime_s;::localtime;::localtime_s;::malloc;::mbrtoc16;::mbrtoc32;::mbsrtowcs;::mbsrtowcs_s;::mbstowcs;::mbstowcs_s;::memchr;::mktime;::mtx_init;::mtx_lock;::mtx_timedlock;::mtx_trylock;::mtx_unlock;::printf_s;::putc;::putwc;::raise;::realloc;::remove;::rename;::scanf;::scanf_s;::setlocale;::setvbuf;::signal;::snprintf;::snprintf_s;::sprintf;::sprintf_s;::sscanf;::sscanf_s;::strchr;::strerror_s;::strftime;::strpbrk;::strrchr;::strstr;::strtod;::strtof;::strtoimax;::strtok;::strtok_s;::strtol;::strtold;::strtoll;::strtoul;::strtoull;::strtoumax;::strxfrm;::swprintf;::swprintf_s;::swscanf;::swscanf_s;::thrd_create;::thrd_detach;::thrd_join;::thrd_sleep;::time;::timespec_get;::tmpfile;::tmpfile_s;::tmpnam;::tmpnam_s;::tss_create;::tss_get;::tss_set;::ungetc;::ungetwc;::vfprintf;::vfprintf_s;::vfscanf;::vfscanf_s;::vfwprintf;::vfwprintf_s;::vfwscanf;::vfwscanf_s;::vprintf_s;::vscanf;::vscanf_s;::vsnprintf;::vsnprintf_s;::vsprintf;::vsprintf_s;::vsscanf;::vsscanf_s;::vswprintf;::vswprintf_s;::vswscanf;::vswscanf_s;::vwprintf_s;::vwscanf;::vwscanf_s;::wcrtomb;::wcschr;::wcsftime;::wcspbrk;::wcsrchr;::wcsrtombs;::wcsrtombs_s;::wcsstr;::wcstod;::wcstof;::wcstoimax;::wcstok;::wcstok_s;::wcstol;::wcstold;::wcstoll;::wcstombs;::wcstombs_s;::wcstoul;::wcstoull;::wcstoumax;::wcsxfrm;::wctob;::wctrans;::wctype;::wmemchr;::wprintf_s;::wscanf;::wscanf_s;'
      cert-oop54-cpp.WarnOnlyIfThisHasSuspiciousField: 'false'
      cert-str34-c.DiagnoseSignedUnsignedCharComparisons: 'false'
      cppcoreguidelines-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic: 'true'
      google-readability-braces-around-statements.ShortStatementLines: '1'
      google-readability-function-size.StatementThreshold: '800'
      google-readability-namespace-comments.ShortNamespaceLines: '10'
      google-readability-namespace-comments.SpacesBeforeComments: '2'
      llvm-else-after-return.WarnOnConditionVariables: 'false'
      llvm-else-after-return.WarnOnUnfixable: 'false'
      llvm-qualified-auto.AddConstToQualified: 'false'
